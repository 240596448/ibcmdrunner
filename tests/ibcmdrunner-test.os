#Использовать ".."
#Использовать asserts
#Использовать fs
#Использовать tempfiles

Перем юТест;
Перем УправлениеИБ;
Перем ВременныйКаталог;

Процедура Инициализация()
	
	УправлениеИБ = Новый УправлениеИБ;
	Лог = Логирование.ПолучитьЛог("oscript.lib.ibcmdrunner");
	Лог.УстановитьУровень(УровниЛога.Отладка);
	
КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзФайлаКонфигурации");
	СписокТестов.Добавить("ТестДолжен_ВыгрузитьДанныеФайловойБазыВФайл");
	СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзФайлаВыгрузки");
	СписокТестов.Добавить("ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайл");
	СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзФайловКонфигурации");
	СписокТестов.Добавить("ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайлы");
	СписокТестов.Добавить("ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаВыгрузкиДанных");
    СписокТестов.Добавить("ТестДолжен_ОчиститьФайловуюБазу");
	СписокТестов.Добавить("ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаКонфигурации");
    // СписокТестов.Добавить("ТестДолжен_СкопироватьПользователейИзХранилища");
	// СписокТестов.Добавить("ТестДолжен_ПроверитьФормированиеФайлаОтчетаОСравненииОсновнойКонфигурацииСФайлом");	
	// СписокТестов.Добавить("ТестДолжен_ПроверитьОсновнаяКонфигурацияИдентичнаФайлу");
	// СписокТестов.Добавить("ТестДолжен_ПроверитьФормированиеФайлаОтчетаОСравненииКонфигурацииРасширенияСФайлом");
	// СписокТестов.Добавить("ТестДолжен_ПроверитьКонфигурацияРасширенияИдентичнаФайлу");		
	// СписокТестов.Добавить("ТестДолжен_ОставитьФайлИнформации");	

	Возврат СписокТестов;
	
КонецФункции

Процедура ПослеЗапускаТеста() Экспорт

	Если ЗначениеЗаполнено( ВременныйКаталог ) Тогда

		Утверждения.ПроверитьИстину( НайтиФайлы( ВременныйКаталог, "*").Количество() = 0, "Во временном каталоге " + ВременныйКаталог + " не должно остаться файлов" );
	
		ВременныеФайлы.УдалитьФайл( ВременныйКаталог );

		Утверждения.ПроверитьИстину( Не ФС.КаталогСуществует(ВременныйКаталог), "Временный каталог должен быть удален");

		ВременныйКаталог = "";

	КонецЕсли;

КонецПроцедуры

Процедура ТестДолжен_СоздатьФайловуюБазуИзФайлаКонфигурации() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1Cv8.cf");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаКонфигурации(ПутьКФайлуКонфигурации);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

Процедура ТестДолжен_ВыгрузитьДанныеФайловойБазыВФайл() Экспорт
    КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	ПутьВыгрузкиДанных = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1C.dt");
	УправлениеИБ.ВыгрузитьДанныеИБ(ПутьВыгрузкиДанных);
	
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ПутьВыгрузкиданных), "Должен быть создан файл выгрузки данных в каталоге fixtures");
	УдалитьФайлы(ПутьВыгрузкиДанных);

КонецПроцедуры

Процедура ТестДолжен_СоздатьФайловуюБазуИзФайлаВыгрузки() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

Процедура ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайл() Экспорт
	КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	ПутьКФайлуКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1Cv8.cf");
	УправлениеИБ.ВыгрузитьДанныеИБ(ПутьКФайлуКонфигурации);
	
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ПутьКФайлуКонфигурации), "Должен быть создан файл выгрузки данных в каталоге fixtures");
	УдалитьФайлы(ПутьКФайлуКонфигурации);
КонецПроцедуры

Процедура ТестДолжен_СоздатьФайловуюБазуИзФайловКонфигурации() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	КаталогВыгрузкиВФайлы = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "files");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайловКонфигурации(КаталогВыгрузкиВФайлы);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

Процедура ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайлы() Экспорт
	КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	КаталогВыгрузкиВФайлы = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "files");
	ФС.ОбеспечитьКаталог(КаталогВыгрузкиВФайлы);
	БазовыйФайлСостояния = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "ConfigDumpInfo.xml");
	УправлениеИБ.ВыгрузитьКонфигурациюВФайлы(КаталогВыгрузкиВФайлы, БазовыйФайлСостояния,, ЛОЖЬ);
	
	ФайлСостояния = ОбъединитьПути(КаталогВыгрузкиВФайлы, "ConfigDumpInfo.xml");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлСостояния), "Должен быть создан файл состояния конфигурации в каталоге fixtures/files");
	УдалитьФайлы(КаталогВыгрузкиВФайлы);
КонецПроцедуры

Процедура ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаВыгрузкиДанных() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	УправлениеИБ.ЗагрузитьДанныеИБ(ПутьКФайлуВыгрузки);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

Процедура ТестДолжен_ОчиститьФайловуюБазу() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УправлениеИБ.ОчиститьИБ();
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры	

Процедура ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаКонфигурации() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");
	ПутьКФайлуКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1Cv8.cf");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	УправлениеИБ.ЗагрузитьКонфигурацию(ПутьКФайлуКонфигурации);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры
//////////////////////////////////////////////////////////////////////////////////////
// Инициализация


Инициализация();
