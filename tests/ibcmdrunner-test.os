#Использовать ".."
#Использовать asserts
#Использовать fs
#Использовать tempfiles
#Использовать v8find

Перем юТест;
Перем УправлениеИБ;
Перем ВременныйКаталог;

Процедура Инициализация()
	
	УправлениеИБ = Новый УправлениеИБ;
	ПутьКIBCMD = ПолучитьПутьКIBCMD();
	Если ЗначениеЗаполнено(ПутьКIBCMD) Тогда
		УправлениеИБ.ПутьКПриложению(ПутьКIBCMD);
	КонецЕсли;	
	Лог = Логирование.ПолучитьЛог("oscript.lib.ibcmdrunner");
	Лог.УстановитьУровень(УровниЛога.Отладка);
	
КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзФайлаКонфигурации");
	СписокТестов.Добавить("ТестДолжен_ВыгрузитьДанныеФайловойБазыВФайл");
	СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзФайлаВыгрузки");
	СписокТестов.Добавить("ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайл");
	СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзФайловКонфигурации");
	СписокТестов.Добавить("ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайлы");
	СписокТестов.Добавить("ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаВыгрузкиДанных");
    //СписокТестов.Добавить("ТестДолжен_ОчиститьФайловуюБазу");
	СписокТестов.Добавить("ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаКонфигурации");
    
	Если ВерсияПлатформыБольше("8.3.20") Тогда
		СписокТестов.Добавить("ТестДолжен_СоздатьФайловуюБазуИзАрхива");
		СписокТестов.Добавить("ТестДолжен_ВыгрузитьКонфигурациюВАрхив");
		СписокТестов.Добавить("ТестДолжен_ЗагрузитьКонфигурациюИзАрхива");

		СписокТестов.Добавить("ТестДолжен_СнятьСПоддержкиКонфигурацию");
		СписокТестов.Добавить("ТестДолжен_ПолучитьСписокОбщихРеквизитов");
		СписокТестов.Добавить("ТестДолжен_ПолучитьИдентификаторПоколенияДанных");

		СписокТестов.Добавить("ТестДолжен_ОбновитьКонфигурациюДинамически");
		СписокТестов.Добавить("ТестДолжен_ОбновитьКонфигурациюСЗавершениемСеансов");

		СписокТестов.Добавить("ТестДолжен_СоздатьРасширение");
		СписокТестов.Добавить("ТестДолжен_ПолучитьИнформациюОРасширении");
		СписокТестов.Добавить("ТестДолжен_ПолучитьСписокРасширений");
		СписокТестов.Добавить("ТестДолжен_ИзменитьСвойстваРасширения");
		СписокТестов.Добавить("ТестДолжен_УдалитьРасширение");
		СписокТестов.Добавить("ТестДолжен_ВыгрузитьРасширениеВФайл");
		СписокТестов.Добавить("ТестДолжен_ЗагрузитьРасширениеИзФайла");

	КонецЕсли;		
	
	Возврат СписокТестов;
	
КонецФункции

Процедура ПослеЗапускаТеста() Экспорт

	Если ЗначениеЗаполнено( ВременныйКаталог ) Тогда

		Утверждения.ПроверитьИстину( НайтиФайлы( ВременныйКаталог, "*").Количество() = 0, "Во временном каталоге " + ВременныйКаталог + " не должно остаться файлов" );
	
		ВременныеФайлы.УдалитьФайл(ВременныйКаталог);

		Утверждения.ПроверитьИстину( Не ФС.КаталогСуществует(ВременныйКаталог), "Временный каталог должен быть удален");

		ВременныйКаталог = "";

	КонецЕсли;

КонецПроцедуры

// Тест 0
Процедура ТестДолжен_СоздатьФайловуюБазуИзФайлаКонфигурации() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	УдалитьФайлы(ВременныйКаталог);
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1Cv8.cf");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаКонфигурации(ПутьКФайлуКонфигурации);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тест 1
Процедура ТестДолжен_ВыгрузитьДанныеФайловойБазыВФайл() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	УдалитьФайлы(ВременныйКаталог);

    Если ВерсияПлатформыБольше("8.3.22") Тогда
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "db");
	ИначеЕсли ВерсияПлатформыБольше("8.3.21") Тогда
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_21", "db");	
	Иначе	
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
	КонецЕсли;	
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	УправлениеИБ.УстановитьПараметрыАвторизацииИБ("admin", "admin");
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	ПутьВыгрузкиДанных = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1C.dt");
	УправлениеИБ.ВыгрузитьДанныеИБ(ПутьВыгрузкиДанных);
	
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ПутьВыгрузкиданных), "Должен быть создан файл выгрузки данных в каталоге fixtures");
	УдалитьФайлы(ПутьВыгрузкиДанных);
	Приостановить(2000);
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тест 2
Процедура ТестДолжен_СоздатьФайловуюБазуИзФайлаВыгрузки() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	УдалитьФайлы(ВременныйКаталог);
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвторизацииИБ("", "");
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	Приостановить(2000);
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тест 3
Процедура ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайл() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	УдалитьФайлы(ВременныйКаталог);

	Если ВерсияПлатформыБольше("8.3.22") Тогда
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "db");
	ИначеЕсли ВерсияПлатформыБольше("8.3.21") Тогда
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_21", "db");	
	Иначе	
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
	КонецЕсли;	
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	УправлениеИБ.УстановитьПараметрыАвторизацииИБ("admin", "admin");
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	ПутьКФайлуКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1Cv8.cf");
	УправлениеИБ.ВыгрузитьКонфигурациюВФайл(ПутьКФайлуКонфигурации);
	
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ПутьКФайлуКонфигурации), "Должен быть создан файл выгрузки данных в каталоге fixtures");
	УдалитьФайлы(ПутьКФайлуКонфигурации);
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тест 4
Процедура ТестДолжен_СоздатьФайловуюБазуИзФайловКонфигурации() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	УдалитьФайлы(ВременныйКаталог);
	КаталогВыгрузкиВФайлы = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "files");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайловКонфигурации(КаталогВыгрузкиВФайлы);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тест 5
Процедура ТестДолжен_ВыгрузитьКонфигурациюФайловойБазыВФайлы() Экспорт
	
	Если ВерсияПлатформыБольше("8.3.22.1703") Тогда
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "db");
		БазовыйФайлСостояния = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "ConfigDumpInfo.xml");
	Иначе	
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
		БазовыйФайлСостояния = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "ConfigDumpInfo.xml");
	КонецЕсли;	
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	КаталогАвтономногоСервера = ОбъединитьПути(КаталогВременныхФайлов(), "data");
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(КаталогАвтономногоСервера);
	КаталогВыгрузкиВФайлы = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "files");
	ФС.ОбеспечитьКаталог(КаталогВыгрузкиВФайлы);
	
	УправлениеИБ.ВыгрузитьКонфигурациюВФайлы(КаталогВыгрузкиВФайлы, БазовыйФайлСостояния,, ЛОЖЬ);
	
	ФайлСостояния = ОбъединитьПути(КаталогВыгрузкиВФайлы, "ConfigDumpInfo.xml");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлСостояния), "Должен быть создан файл состояния конфигурации в каталоге fixtures/files");
	УдалитьФайлы(КаталогВыгрузкиВФайлы);
	УдалитьФайлы(КаталогАвтономногоСервера);
КонецПроцедуры

// Тест 6
Процедура ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаВыгрузкиДанных() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	УдалитьФайлы(ВременныйКаталог);
	Если ВерсияПлатформыБольше("8.3.22.1703") Тогда
		ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "1Cv8.dt");
	Иначе
		ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");
	КонецЕсли;	

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	УправлениеИБ.ЗагрузитьДанныеИБ(ПутьКФайлуВыгрузки);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тест 7
// Процедура ТестДолжен_ОчиститьФайловуюБазу() Экспорт
// 	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
// 	УдалитьФайлы(ВременныйКаталог);
// 	КаталогАвтономногоСервера = ОбъединитьПути(КаталогВременныхФайлов(), "data");
// 	ФС.ОбеспечитьКаталог(ВременныйКаталог);
// 	ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C_.dt");

// 	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
// 	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(КаталогАвтономногоСервера);
// 	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
// 	УправлениеИБ.УстановитьПараметрыАвторизацииИБ("Администратор", "1");
// 	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
// 	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
// 	УправлениеИБ.ОчиститьИБ();
// 	// Сч = 0;
// 	// Пока НайтиФайлы( ВременныйКаталог, "*").Количество() <> 0 Цикл
// 	// 	Приостановить(1000);
// 		УдалитьФайлы(КаталогАвтономногоСервера);
// 		УдалитьФайлы(ВременныйКаталог);
// 	// 	Сч = Сч + 1;
// 	// 	Если Сч > 100 Тогда
// 	// 		Прервать;
// 	// 	КонецЕсли;	

// 	// КонецЦикла;	
// 	// Сообщить("Ожидание " + Сч + " сек.");
// КонецПроцедуры	

// Тест 7
Процедура ТестДолжен_ЗагрузитьФайловуюБазуИзФайлаКонфигурации() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	УдалитьФайлы(ВременныйКаталог);
	Если ВерсияПлатформыБольше("8.3.22.1703") Тогда
		ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "1Cv8.dt");
	Иначе
		ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");
	КонецЕсли;	
	
	ПутьКФайлуКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1Cv8.cf");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	УправлениеИБ.ЗагрузитьКонфигурацию(ПутьКФайлуКонфигурации);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Тесты выгрузки-загрузки файл zip
Процедура ТестДолжен_СоздатьФайловуюБазуИзАрхива() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	УдалитьФайлы(ВременныйКаталог);
	ФайлАрхива = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "archive.zip");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайловКонфигурации(ФайлАрхива,,, Истина);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры	

Процедура ТестДолжен_ВыгрузитьКонфигурациюВАрхив() Экспорт
		
	Если ВерсияПлатформыБольше("8.3.22.1703") Тогда
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "db");
		БазовыйФайлСостояния = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "ConfigDumpInfo.xml");
	Иначе	
		КаталогИБ = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "db");
		БазовыйФайлСостояния = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "ConfigDumpInfo.xml");
	КонецЕсли;	
	УправлениеИБ.УстановитьПараметрыФайловойИБ(КаталогИБ);
	КаталогАвтономногоСервера = ОбъединитьПути(КаталогВременныхФайлов(), "data");
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(КаталогАвтономногоСервера);
	ФайлВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "archive1.zip");
	ФС.ОбеспечитьКаталог(КаталогВыгрузкиВФайлы);
	
	УправлениеИБ.ВыгрузитьКонфигурациюВФайлы(ФайлВыгрузки, БазовыйФайлСостояния,, Истина);
	
	Утверждения.ПроверитьИстину(ФайлВыгрузки, "Должен быть создан файл состояния конфигурации в каталоге fixtures/files");
	УдалитьФайлы(ФайлВыгрузки);
	УдалитьФайлы(КаталогАвтономногоСервера);
КонецПроцедуры

Процедура ТестДолжен_ЗагрузитьКонфигурациюИзАрхива() Экспорт
	ВременныйКаталог = ОбъединитьПути(КаталогВременныхФайлов(), "tmp_db");
	ФС.ОбеспечитьКаталог(ВременныйКаталог);
	УдалитьФайлы(ВременныйКаталог);
	Если ВерсияПлатформыБольше("8.3.22.1703") Тогда
		ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "8_3_22", "1Cv8.dt");
	Иначе
		ПутьКФайлуВыгрузки = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "1.0", "1C.dt");
	КонецЕсли;	
	
	ПутьКФайлуАрхиваКонфигурации = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "archive.zip");

	УправлениеИБ.УстановитьПараметрыФайловойИБ(ВременныйКаталог);
	УправлениеИБ.УстановитьПараметрыАвтономногоСервера(ВременныйКаталог);
	УправлениеИБ.СоздатьИБИзФайлаВыгрузки(ПутьКФайлуВыгрузки);
	УправлениеИБ.ЗагрузитьКонфигурациюИзФайлов(ПутьКФайлуАрхиваКонфигурации, , , Истина);
	ФайлБазыДанных = ОбъединитьПути(ВременныйКаталог, "1Cv8.1CD");
	Утверждения.ПроверитьИстину(ФС.ФайлСуществует(ФайлБазыДанных), "Должен быть создан файл базы данных во временном каталоге");
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

// Новые команды
Процедура ТестДолжен_СнятьСПоддержкиКонфигурацию() Экспорт
КонецПроцедуры	

Процедура ТестДолжен_ПолучитьСписокОбщихРеквизитов() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ПолучитьИдентификаторПоколенияДанных() Экспорт
КонецПроцедуры

// Обновление конфигурации БД
Процедура ТестДолжен_ОбновитьКонфигурациюДинамически() Экспорт
КонецПроцедуры	

Процедура ТестДолжен_ОбновитьКонфигурациюСЗавершениемСеансов() Экспорт
КонецПроцедуры

// Работа с расширениями
Процедура ТестДолжен_СоздатьРасширение() Экспорт
КонецПроцедуры	

Процедура ТестДолжен_ПолучитьИнформациюОРасширении() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ПолучитьСписокРасширений() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ИзменитьСвойстваРасширения() Экспорт
КонецПроцедуры

Процедура ТестДолжен_УдалитьРасширение() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ВыгрузитьРасширениеВФайл() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ЗагрузитьРасширениеИзФайла() Экспорт
КонецПроцедуры	


Функция ПолучитьПутьКIBCMD()
	Возврат ПолучитьПеременнуюСреды("IBCMD_PATH", РасположениеПеременнойСреды.Процесс);
КонецФункции	

Функция ВерсияПлатформыБольше(Версия)
	Рез = Ложь;
	РезультатСравнения = УправлениеИБ.СравнитьВерсии(УправлениеИБ.Версия(), Версия);
	Если РезультатСравнения > 0 Тогда
		Рез = Истина;
	КонецЕсли;	
	Возврат Рез;
КонецФункции	


//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

// УстановитьПеременнуюСреды("IBCMD_PATH","""c:\Program Files\1cv8\8.3.22.1704\bin\ibcmd""" , РасположениеПеременнойСреды.Процесс);
Инициализация();
